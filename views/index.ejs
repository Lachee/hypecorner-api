<html>
    <title>HypeCorner Embed Player</title>
    <style>
        * { padding: 0; margin: 0; }
    </style>
    <body>
        <!-- Add a placeholder for the Twitch embed -->
        <div id="twitch-embed"></div>

        <!-- Load the Twitch embed script -->
        <script src="https://embed.twitch.tv/embed/v1.js"></script>

        <!-- Create a Twitch.Embed object that will render within the "twitch-embed" root element. -->
        <script type="text/javascript">
            var twitchChannel = "<%= channel %>";
            var twitchEmbed = new Twitch.Embed("twitch-embed", {
                channel: twitchChannel,
                layout: "<%= chat ? 'video-chat' : 'video' %>",
                height: "100%",
                width: "100%",
            });

            var protocol = location.protocol === 'https:' ? 'wss:' : 'ws:';
            var host = protocol + "//" + window.location.host + "/listen";
     
            connect(host);
     
            /** Changes the twitch channel */
            function changeChannel(name) {
                if (name != twitchChannel) {
                    console.log("New Channel", name);
                    twitchChannel = name;                
                    twitchEmbed.setChannel(twitchChannel);
                }
            }
            
            /** Shows the preroll */
            function preroll(duration = 1000) {
                console.log("Preroll Shown!");
            }

            /** Sets the score display */
            function score(scores) {
                console.log("Scores!", scores);
            }

            /** Connect handles the WebSockets */
            function connect(host) {
                
                //Connect and listen to events
                var ws = new WebSocket(host);

                //We have opened, so change the initial channel
                ws.addEventListener("open", (event) => { 
                    console.log("open", event);
                    fetch('/api/channel').then(async (data) => {
                        var result = await data.json();
                        changeChannel(result.name);
                    });
                });

                //We closed, reconnect
                ws.addEventListener("close", (event) => { 
                    console.warn("Live Watch has terminated", event); 
                    connect(host);
                });
                
                //We have an event, so lets parse
                ws.addEventListener("message", (event) => { 
                    var payload = JSON.parse(event.data);
                    console.log("WS EVENT", payload.e, payload.d);
                    switch(payload.e) {
                        default: break;
                        case 'ORCHESTRA_CHANGE':
                            changeChannel(payload.d.name);
                            break;
                        case 'ORCHESTRA_PREROLL':
                            preroll(payload.d.duration);
                            break;
                        case 'ORCHESTRA_SCORE':
                            score(payload.d);
                            break;
                    }
                });
            }

        </script>
        
		<!-- Live Updating -->
		<script>
	
		</script>
    </body>
</html>